
########Get Quemu and KVM
sudo apt update && sudo apt upgrade
sudo apt install qemu-kvm libvirt-bin virtinst cloud-utils ebtables dnsmasq
sudo reboot

########Download ubuntu
wget https://cloud-images.ubuntu.com/bionic/current/bionic-server-cloudimg-amd64.img

########Check cloud image and resize (set to be the size of the VM)
sudo mkdir -p /var/lib/libvirt/images
sudo qemu-img resize bionic-server-cloudimg-amd64.img 20G
sudo qemu-img info bionic-server-cloudimg-amd64.img

########Convert cloud image to qcow2
sudo mkdir -p /var/lib/libvirt/images
sudo qemu-img convert -f qcow2 bionic-server-cloudimg-amd64.img /var/lib/libvirt/images/test-kmods.img
sudo qemu-img resize /var/lib/libvirt/images/test-kmods.img 20G

########Create cloud config for each VM
nano test-kmods.txt
------------------------------------
#cloud-config
password: asdf
chpasswd: { expire: False }
ssh_pwauth: True
hostname: test-kmods
-------------------------------------

########Generate config iso for each VM
sudo cloud-localds /var/lib/libvirt/images/test-kmods.iso test-kmods.txt

########Deploy each cloud image as a VM

sudo virsh net-autostart default
sudo virsh net-start default
virsh net-list --all

sudo virt-install --name test-kmods --ram 1000 --vcpus 4 --disk \
/var/lib/libvirt/images/test-kmods.img,device=disk,bus=virtio --disk \
/var/lib/libvirt/images/test-kmods.iso,device=cdrom --os-type linux \
--os-variant ubuntu18.04 --virt-type kvm --graphics none \
--network network=default,model=virtio --import

#Username: ubuntu
#Password: asdf
##Use "ctl-shift-]" (without quotes) to exit console

######## Install apps
sudo apt update && sudo apt upgrade
sudo apt-get install cmake sysstat build-essential libz-dev git  
git clone https://github.com/lukemartinlogan/linux-io-rq-counter.git
cd linux-io-rq-counter/build
git config --global credential.helper cache
git pull

####### Manage VM
sudo virsh start test-kmods
sudo virsh shutdown test-kmods
sudo virsh destroy test-kmods
sudo virsh console test-kmods

####### Remove VM
sudo virsh destroy test-kmods
sudo virsh undefine test-kmods --remove-all-storage 

#NOTES

make build-km
make insert-km
./mount-counter /dev/sdc
watch ./test-counter /dev/sdc
make remove-km
